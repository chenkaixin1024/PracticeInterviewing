//要求对数组a进行排序，要求时间复杂度为O(N)
//void Sort(int arr[],int size)
//{
//	int max=arr[0];
//	int i=0;
//	for(i=1;i<size;i++)
//	{
//		if(arr[i]>max)
//			max=arr[i];
//	}
//	int* tmp=new int[max+1];
//	memset(tmp,0,(max+1)*sizeof(int));
//
//	for(i=0;i<size;i++)
//	{
//		tmp[arr[i]]++;
//	}
//
//	int idx=0;
//	for(i=0;i<max+1;i++)
//	{
//		if(tmp[i]!=0)
//		{
//			arr[idx++]=i;
//			tmp[i]--;
//			i--;
//		}
//	}
//
//	delete[] tmp;
//}
//
//void funtest()
//{
//	int arr[]={12,13,12,13,19,18,15,12,15,16,17};
//	Sort(arr,sizeof(arr)/sizeof(arr[0]));
//	for(int i=0;i<sizeof(arr)/sizeof(arr[0]);i++)
//	{
//		cout<<arr[i]<<" ";
//	}
//
//	cout<<endl;
//}
//
//int main()
//{
//	funtest();
//	return 0;
//}



//求一个无序数组的中位数
//void GetHeap(int arr[],int size)
//{
//	int start=(size-1)/2;
//	
//	while(start>=0)
//	{
//		int parent=start;
//		int child=parent*2+1;
//		while(child<size)
//		{
//			if(child+1<size&&arr[child]>arr[child+1])
//			{
//				swap(arr[child],arr[child+1]);
//			}
//			if(arr[child]<arr[parent])
//				swap(arr[child],arr[parent]);
//			parent=child;
//			child=child*2+1;
//		}
//		start--;
//	}
//}
//
//int GetMid(int arr[],int size)
//{
//	int* heap=new int[(size+1)/2];
//	int ret=0;
//	int i=0;
//	for(i=0;i<(size+1)/2;i++)
//	{
//		heap[i]=arr[i];
//	}
//
//	GetHeap(heap,(size+1)/2);
//	for(;i<size;i++)
//	{
//		if(arr[i]>heap[0])
//		{
//			heap[0]=arr[i];
//			GetHeap(heap,(size+1)/2);
//		}
//	}
//	ret=heap[0];
//	delete[] heap;
//	return ret;
//}
//
//void funtest()
//{
//	int arr[]={2,5,4,9,3,6,8,7,1,0,10,11};
//	cout<<GetMid(arr,sizeof(arr)/sizeof(arr[0]))<<endl;
//}
//
//int main()
//{
//	funtest();
//	return 0;
//}


//将N个字符的数组，循环右移K位。时间复杂度O(N)
//void Reverse(char* str,int n)
//{
//	int left=0;
//	int right=n-1;
//	while(left<right)
//	{
//		swap(str[left],str[right]);
//		left++;
//		right--;
//	}
//}
//
//void RotateRightK(char* str,int K)
//{
//	int n=strlen(str);
//	K%=n;
//	Reverse(str,n-K);
//	Reverse(str+n-K,K);
//	Reverse(str,n);
//}
//
//
//void funtest()
//{
//	char str[]="abcd1234";
//	cout<<str<<endl;
//	RotateRightK(str,8);
//	cout<<str<<endl;
//}
//
//int main()
//{
//	funtest();
//	return 0;
//}